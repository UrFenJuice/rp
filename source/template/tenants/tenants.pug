//- script(src='Scripts/Common.js')
//- script(type='text/javascript', src='scripts/moment.min.js')
//- script(type='text/javascript', src='scripts/bootstrap-datetimepicker.js')
//- script(src='Scripts/bootstrapValidator.min.js')
//- script(type='text/javascript', src='https://cdn.polyfill.io/v2/polyfill.js?features=Intl')
//- script(src='Scripts/editablegrid/editablegrid.js')
//- script(src='Scripts/editablegrid/editablegrid_renderers.js')
//- script(src='Scripts/editablegrid/editablegrid_editors.js')
//- script(src='Scripts/editablegrid/editablegrid_validators.js')
//- script(src='Scripts/editablegrid/editablegrid_utils.js')
//- script(src='Scripts/editablegrid/editablegrid_charts.js')
//- script(src='Scripts/Garland.js')
//- script(type='text/javascript', src='Scripts/bootstrap-datetimepicker.min.js')

.prop__menu
	a(href="#", title="").create-property__back_url.prop__menu_item-link 
		i.left__arrow.prop__menu_item-link_icon 
			+use("left-arrow")
		| Back To All Properties
.tennant__group
	.tennant__title
		h1 Add Tenants
		p.address__tenant North Shore, Auckland
	.tennant__cancel
		a(href="#").create-property__cancel.create-property__cancel-tenant
			| cancel
.bodyformadd.tenant__form
	ul.add-menu.tenant__form_nav
		li.margsumm.add-menu.tenant__form_nav_item
			a.adr-menu.add-menu.tenant__form_nav_item-link.step1(href='javascript:void(0);', onclick='garland.showStep(1)')
				| Tenants
		li.margsumm.add-menu.tenant__form_nav_item
			a.adr-menu.add-menu.tenant__form_nav_item-link.step2(href='javascript:void(0);', onclick='garland.showStep(2)')
				| Rent
		li.margsumm.add-menu.tenant__form_nav_item
			a.adr-menu.add-menu.tenant__form_nav_item-link.step3(href='javascript:void(0);', onclick='garland.showStep(3)')
				| Bond & Pets&nbsp;&nbsp;
		li.margsumm.add-menu.tenant__form_nav_item
			a.adr-menu.add-menu.tenant__form_nav_item-link.step4(href='javascript:void(0);', onclick='garland.showStep(4)')
				| Utilities
		li.add-menu.tenant__form_nav_item
			a.add-menu.tenant__form_nav_item-link.adr-menu.step5(href='javascript:void(0);', onclick='garland.showStep(5)')
				| Summary
	include tenants_2
	//- include tenants_2
	//- include tenants_3
	//- include tenants_4
	//- include tenants_5
	.previous.tenants__block-links
		a#MainContent_btnPrevios.previ.previ-rent.tenants__block-link_prev(onclick='garland.showNextStep(-1); return false;', href="javascript:__doPostBack('ctl00$MainContent$btnPrevios','')")
			| PREVIOUS
		a#MainContent_btnContinue.previ.previ-rent.tenants__block-link_continue(onclick='garland.showNextStep(1); return false;', href="javascript:__doPostBack('ctl00$MainContent$btnContinue','')")
			| CONTINUE
		a#MainContent_btnConfirmAndInvite.previ.previ-rent.confirm.tenants__block-link_prev_confirm(onclick='return checkSubmit();', href="javascript:__doPostBack('ctl00$MainContent$btnConfirmAndInvite','')")
			| CONFIRM AND INVITE
// Инициализация виджета "Bootstrap datetimepicker"
script(type='text/javascript').
	$(function () {
	$('#divFirstRentDueOn').datetimepicker({
	format: 'DD/MM/YYYY'
	}).on('dp.change', DateTimePickerFirstRentDueOnChange);
	$('#divFixedTermContractExpiringOn').datetimepicker({
	format: 'DD/MM/YYYY'
	}).on('dp.change', DateTimePickerFixedTermContractExpiringOnChange);
	$('#divDueOn').datetimepicker({
	format: 'DD/MM/YYYY'
	}).on('dp.change', DateTimePickerFiBondDueOnOnChange);
	$('#divDateTimePickerFrequency').datetimepicker({
	format: 'DD/MM/YYYY'
	}).on('dp.change', divDateTimePickerFrequencyDateChange);
	$("input:radio").change(function () {
	//          if (this.checked) {
	//              $(this).parents(".radio-b").addClass("checked").siblings(".radio-b").removeClass("checked");
	//          }
	$("input:radio").each(function () {
	$(this).parents(".radio-b").toggleClass("checked", this.checked);
	});
	});
	$("input:radio").each(function () {
	$(this).parents(".radio-b").toggleClass("checked", this.checked);
	});
	$("#MainContent_RentCost").change(function() {
	$(this).val(decimals($(this).val()));
	});
	$("#MainContent_BondAmount").change(function() {
	$(this).val(decimals($(this).val()));
	});
	$("#MainContent_BondAmount").keydown(AmountOnly);
	$("#MainContent_RentCost").keydown(AmountOnly);
	garland.validSteps = [false,false,false,false,true]; // Steps for Validation
	garland.currentStep = 1;
	garland.finishStep = 1;
	garland.finishStep = 5;
	garland.btnPrevioId = "MainContent_btnPrevios";
	garland.btnContinueId = "MainContent_btnContinue";
	garland.btnSubmitId = "MainContent_btnConfirmAndInvite";
	garland.initSummary =  function() {
	var tenantPays    = "Tenant pays";
	var landlordPays  = "Landlord pays";
	var notApplicable = "Not applicable";
	$("#pElectrUtils").text($('#MainContent_ElectricityTenantPays').is(':checked')?tenantPays:
	$('#MainContent_ElectricityLandLordPays').is(':checked')?landlordPays:notApplicable);
	$("#pWaterUtils").text($('#MainContent_WaterTenantPays').is(':checked')?tenantPays:
	$('#MainContent_WaterLandLordPays').is(':checked')?landlordPays:notApplicable);
	$("#pInternetUtils").text($('#MainContent_InternetTenantPays').is(':checked')?tenantPays:
	$('#MainContent_InternetLandLordPays').is(':checked')?landlordPays:notApplicable);
	$("#pGasUtils").text($('#MainContent_GasTenantPays').is(':checked')?tenantPays:
	$('#MainContent_GasLandLordPays').is(':checked')?landlordPays:notApplicable);
	$("#pPhoneUtils").text($('#MainContent_PhoneTenantPays').is(':checked')?tenantPays:
	$('#MainContent_PhoneLandLordPays').is(':checked')?landlordPays:notApplicable);
	$("#pTvUtils").text($('#MainContent_TVTenantPays').is(':checked')?tenantPays:
	$('#MainContent_TVLandLordPays').is(':checked')?landlordPays:notApplicable);
	$("#pFullName").text($('#MainContent_FirstName').val() + " " + $('#MainContent_LastName').val());
	$("#pEmail").text($('#MainContent_EMail').val());
	$("#lblRentCostSumm").text($('#MainContent_RentCost').val());
	$("#lblFrequency").text($('#MainContent_Frequency').find("option:selected").text());
	$("#lblBondCost").text($('#MainContent_BondAmount').val());
	petList = $("#petsSumary");
	if(_pets != undefined ){
	petList.empty();
	for(var i=0; i<_pets.length; i++){
	var listItem = '<li class="no_pets">' + _pets[i].Name + '</li>';
	petList.append(listItem);
	}
	}else{
	petList.text("No pets");
	}
	};
	garland.showStep(1);
	FrequencyChange($("#MainContent_Frequency"))
	$("#divFixedTermContractExpiringOn").hide();
	$("#MainContent_Periodicity").val($("#ddlPeriodicity").val());
	InitGrid("MainContent_hdnMoveInCosts");
	});
	var step = 1;
	function divDateTimePickerFrequencyDateChange(e) {
	$("#MainContent_Periodicity").val(e.date.date());
	$('#divTenantStep2').bootstrapValidator('revalidateField', $('#MainContent_FrequencyMonth'));
	}
	function ddlPeriodicityChange(e) {
	$("#MainContent_Periodicity").val($("#ddlPeriodicity").val());
	}
	function DateTimePickerFirstRentDueOnChange(e){
	$('#divTenantStep2').bootstrapValidator('revalidateField', $('#MainContent_FirstRentDueOn'));
	}
	function DateTimePickerFixedTermContractExpiringOnChange(e){
	$('#divTenantStep2').bootstrapValidator('revalidateField', $('#MainContent_FixedTermContractExpiringOn'));
	}
	function DateTimePickerFiBondDueOnOnChange(e){
	$("#divTenantStep3").bootstrapValidator('revalidateField', $('#MainContent_BondDueOn'));
	}
	function formSubmit(){ }
	function FrequencyChange(ddl) {
	var caption = $(ddl).find("option:selected").text();
	var value = $(ddl).val();
	var names = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];
	var ddlPeriodicity = $("#ddlPeriodicity");
	var calendar = $("#divCalendarFrequency");
	var frequencyMonthValidation = false;
	var prefix = " ";
	switch (value) {
	case '1':
	prefix = "Every ";
	calendar.hide();
	//ddlPeriodicity
	ddlPeriodicity.show();
	break;
	case '2':
	prefix = "Second ";
	calendar.hide();
	ddlPeriodicity.show();
	break;
	case '3':
	calendar.show();
	frequencyMonthValidation = true;
	ddlPeriodicity.hide();
	break;
	}
	$("#divTenantStep2").data('bootstrapValidator').enableFieldValidators('ctl00$MainContent$FrequencyMonth', frequencyMonthValidation);
	ddlPeriodicity.empty();
	$.each(names, function (index, value) {
	ddlPeriodicity.append(
	$('<option>', {
	value: index,
	text: prefix + value
	}, '</option>'));
	});
	$("#lblWeeklyRent").text(caption + " Rent");
	$("#lblWeeklyDueDate").text(caption + " Due Date");
	$("#lblRentCost").text(caption + " Rent");
	if(!frequencyMonthValidation){
	$("#MainContent_Periodicity").val($("#ddlPeriodicity").val());
	}
	}
	$('#divTenantStep1').bootstrapValidator({
	live: 'disabled',
	feedbackIcons: {
	valid: 'fa',
	invalid: 'fa',
	validating: 'fa'
	},
	message: 'This value is not valid',
	fields: {
	ctl00$MainContent$FirstName: {
	validators: {
	notEmpty: {
	message: 'Please enter a valid First Name'
	}
	}
	},
	ctl00$MainContent$LastName: {
	validators: {
	notEmpty: {
	message: 'Please enter a valid Last Name'
	}
	}
	},
	ctl00$MainContent$EMail: {
	validators: {
	notEmpty: {
	message: 'The email address is required'
	},
	emailAddress: {
	message: 'The value is not a valid email address'
	}
	}
	},
	}
	});
	$('#divTenantStep2').bootstrapValidator({
	live: 'disabled',
	feedbackIcons: {
	valid: 'fa',
	invalid: 'fa',
	validating: 'fa'
	},
	message: 'This value is not valid',
	fields: {
	ctl00$MainContent$Frequency: {
	validators: {
	notEmpty: {
	message: 'Please enter a valid Frequency'
	},
	}
	},
	ctl00$MainContent$RentCost: {
	validators: {
	notEmpty: {
	message: 'Please enter a valid Frequency'
	}
	}
	},
	ctl00$MainContent$FrequencyMonth: {
	validators: {
	notEmpty: {
	message: 'The frequency Month is required'
	},
	}
	},
	ctl00$MainContent$FirstRentDueOn: {
	validators: {
	notEmpty: {
	message: 'The first rent due on is required'
	},
	date: {
	format: 'DD/MM/YYYY',
	message: 'The value is not a valid first rent due on'
	}
	}
	},
	ctl00$MainContent$FixedTermContractExpiringOn: {
	validators: {
	notEmpty: {
	message: 'The fixed term contract expiring on is required'
	},
	date: {
	format: 'DD/MM/YYYY',
	message: 'The value is not a valid fixed term contract expiring on'
	}
	}
	},
	ddlPeriodicity: {
	validators: {
	notEmpty: {
	message: 'The weekly due date is required'
	},
	//date: {
	//    message: 'The value is not a valid first rent due on'
	//}
	}
	},
	}
	});
	$('#divTenantStep3').bootstrapValidator({
	live: 'disabled',
	feedbackIcons: {
	valid: 'fa',
	invalid: 'fa',
	validating: 'fa'
	},
	message: 'This value is not valid',
	fields: {
	ctl00$MainContent$BondAmount: {
	validators: {
	notEmpty: {
	message: 'The Bond amount  is required'
	},
	}
	},
	ctl00$MainContent$BondDueOn: {
	validators: {
	notEmpty: {
	message: 'The Bond due on   is required'
	},
	date: {
	format: 'DD/MM/YYYY',
	message: 'The Bond due on   is required'
	}
	}
	},
	}
	});
	function ShowAddPetsControl(){
	ShowPoPup("divCreatePetControl");
	return false;
	}
	function ShowhdnMoveInCostsGrid(){
	ShowPoPup("divEditableGridControl");
	return false;
	}
	function FixedTermContractExpiringOn(show){
	$("#divTenantStep2").data('bootstrapValidator').enableFieldValidators('ctl00$MainContent$FixedTermContractExpiringOn', show);
	if(show){
	$('#divFixedTermContractExpiringOn').show();
	}else{
	$('#divFixedTermContractExpiringOn').hide();
	}
	}
	function BondFixidTermContractExpiringOn(checked){
	$("#divTenantStep3").data('bootstrapValidator').enableFieldValidators('ctl00$MainContent$BondDueOn', checked);
	}
	function checkSubmit(){
	if(garland.currentStep==garland.finishStep){
	return true;
	}
	else{
	return false;
	}
	}
input#hfLeftMenuId(type='hidden', name='ctl00$hfLeftMenuId', value='AddTenantsKey')
